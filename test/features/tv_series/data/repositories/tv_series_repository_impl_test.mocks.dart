// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/features/tv_series/data/repositories/tv_series_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dio/dio.dart' as _i2;
import 'package:ditonton/core/utils/database_helper.dart' as _i5;
import 'package:ditonton/features/tv_series/data/datasources/tv_series_local_data_source.dart'
    as _i9;
import 'package:ditonton/features/tv_series/data/datasources/tv_series_remote_data_source.dart'
    as _i6;
import 'package:ditonton/features/tv_series/data/models/season_detail_model.dart'
    as _i4;
import 'package:ditonton/features/tv_series/data/models/tv_series_detail_model.dart'
    as _i3;
import 'package:ditonton/features/tv_series/data/models/tv_series_model.dart'
    as _i8;
import 'package:ditonton/features/tv_series/data/models/tv_series_table.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesDetailModel_1 extends _i1.SmartFake
    implements _i3.TvSeriesDetailModel {
  _FakeTvSeriesDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetailModel_2 extends _i1.SmartFake
    implements _i4.SeasonDetailModel {
  _FakeSeasonDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseHelper_3 extends _i1.SmartFake
    implements _i5.DatabaseHelper {
  _FakeDatabaseHelper_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TVSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesRemoteDataSource extends _i1.Mock
    implements _i6.TVSeriesRemoteDataSource {
  MockTVSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);

  @override
  _i7.Future<List<_i8.TvSeriesModel>> getNowPlayingTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTvSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i8.TvSeriesModel>>.value(<_i8.TvSeriesModel>[]),
      ) as _i7.Future<List<_i8.TvSeriesModel>>);

  @override
  _i7.Future<List<_i8.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i8.TvSeriesModel>>.value(<_i8.TvSeriesModel>[]),
      ) as _i7.Future<List<_i8.TvSeriesModel>>);

  @override
  _i7.Future<List<_i8.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i8.TvSeriesModel>>.value(<_i8.TvSeriesModel>[]),
      ) as _i7.Future<List<_i8.TvSeriesModel>>);

  @override
  _i7.Future<List<_i8.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i7.Future<List<_i8.TvSeriesModel>>.value(<_i8.TvSeriesModel>[]),
      ) as _i7.Future<List<_i8.TvSeriesModel>>);

  @override
  _i7.Future<_i3.TvSeriesDetailModel> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue: _i7.Future<_i3.TvSeriesDetailModel>.value(
            _FakeTvSeriesDetailModel_1(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.TvSeriesDetailModel>);

  @override
  _i7.Future<List<_i8.TvSeriesModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSeries,
          [query],
        ),
        returnValue:
            _i7.Future<List<_i8.TvSeriesModel>>.value(<_i8.TvSeriesModel>[]),
      ) as _i7.Future<List<_i8.TvSeriesModel>>);

  @override
  _i7.Future<_i4.SeasonDetailModel> getSeasonDetail(
    int? tvId,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeasonDetail,
          [
            tvId,
            seasonNumber,
          ],
        ),
        returnValue:
            _i7.Future<_i4.SeasonDetailModel>.value(_FakeSeasonDetailModel_2(
          this,
          Invocation.method(
            #getSeasonDetail,
            [
              tvId,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i4.SeasonDetailModel>);
}

/// A class which mocks [TVSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesLocalDataSource extends _i1.Mock
    implements _i9.TVSeriesLocalDataSource {
  MockTVSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.DatabaseHelper get databaseHelper => (super.noSuchMethod(
        Invocation.getter(#databaseHelper),
        returnValue: _FakeDatabaseHelper_3(
          this,
          Invocation.getter(#databaseHelper),
        ),
      ) as _i5.DatabaseHelper);

  @override
  _i7.Future<String> insertWatchlist(_i10.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [tvSeries],
        ),
        returnValue: _i7.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [tvSeries],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> removeWatchlist(_i10.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tvSeries],
        ),
        returnValue: _i7.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tvSeries],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<List<_i10.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i10.TvSeriesTable>>.value(<_i10.TvSeriesTable>[]),
      ) as _i7.Future<List<_i10.TvSeriesTable>>);

  @override
  _i7.Future<_i10.TvSeriesTable?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesById,
          [id],
        ),
        returnValue: _i7.Future<_i10.TvSeriesTable?>.value(),
      ) as _i7.Future<_i10.TvSeriesTable?>);
}
