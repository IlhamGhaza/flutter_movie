// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/presentation/pages/tv_series_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i12;

import 'package:ditonton/common/state_enum.dart' as _i8;
import 'package:ditonton/domain/entities/tv_series.dart' as _i9;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i11;
import 'package:ditonton/domain/usecases/get_tv_series_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_watchlist_status_tv_series.dart'
    as _i5;
import 'package:ditonton/domain/usecases/remove_watchlist_tv_series.dart'
    as _i4;
import 'package:ditonton/domain/usecases/save_watchlist_tv_series.dart' as _i3;
import 'package:ditonton/presentation/provider/tv_series_detail_notifier.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvSeriesDetail_0 extends _i1.SmartFake
    implements _i2.GetTvSeriesDetail {
  _FakeGetTvSeriesDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvSeries_1 extends _i1.SmartFake
    implements _i3.SaveWatchlistTvSeries {
  _FakeSaveWatchlistTvSeries_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvSeries_2 extends _i1.SmartFake
    implements _i4.RemoveWatchlistTvSeries {
  _FakeRemoveWatchlistTvSeries_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatusTvSeries_3 extends _i1.SmartFake
    implements _i5.GetWatchListStatusTvSeries {
  _FakeGetWatchListStatusTvSeries_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvSeriesDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesDetailNotifier extends _i1.Mock
    implements _i6.TvSeriesDetailNotifier {
  MockTvSeriesDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvSeriesDetail get getTvSeriesDetail => (super.noSuchMethod(
        Invocation.getter(#getTvSeriesDetail),
        returnValue: _FakeGetTvSeriesDetail_0(
          this,
          Invocation.getter(#getTvSeriesDetail),
        ),
      ) as _i2.GetTvSeriesDetail);

  @override
  _i3.SaveWatchlistTvSeries get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlistTvSeries_1(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i3.SaveWatchlistTvSeries);

  @override
  _i4.RemoveWatchlistTvSeries get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlistTvSeries_2(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i4.RemoveWatchlistTvSeries);

  @override
  _i5.GetWatchListStatusTvSeries get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListStatusTvSeries_3(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i5.GetWatchListStatusTvSeries);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  String get recommendationsMessage => (super.noSuchMethod(
        Invocation.getter(#recommendationsMessage),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#recommendationsMessage),
        ),
      ) as String);

  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#watchlistMessage),
        ),
      ) as String);

  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);

  @override
  _i8.RequestState get detailState => (super.noSuchMethod(
        Invocation.getter(#detailState),
        returnValue: _i8.RequestState.Empty,
      ) as _i8.RequestState);

  @override
  _i8.RequestState get recommendationsState => (super.noSuchMethod(
        Invocation.getter(#recommendationsState),
        returnValue: _i8.RequestState.Empty,
      ) as _i8.RequestState);

  @override
  List<_i9.TvSeries> get recommendations => (super.noSuchMethod(
        Invocation.getter(#recommendations),
        returnValue: <_i9.TvSeries>[],
      ) as List<_i9.TvSeries>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i10.Future<void> fetchTvSeriesDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvSeriesDetail,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> addWatchlist(_i11.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [tvSeries],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> removeFromWatchlist(_i11.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tvSeries],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesRecommendations,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
